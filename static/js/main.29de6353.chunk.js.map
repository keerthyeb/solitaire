{"version":3,"sources":["data/cards.js","model/winningPiles.js","model/piles.js","model/game.js","index.js"],"names":["cards","type","number","color","unicode","winningPiles","_this","this","Object","classCallCheck","setDraggable","card","draggable","getWinningPiles","decks","isEmpty","cardLength","isFirstCard","colors","spade","heart","club","diamond","_this2","length","keys","forEach","suit","push","isThisDropable","Piles","addPile","pile","piles","getPiles","pileNumber","pileLength","removeCard","pop","getPileLength","index","getLastCard","isKing","lastCard","sourcePile","destinationPile","_this$getPileAndLengt","getPileAndLength","updatePiles","isThisDropableOnPile","_this$getPileAndLengt2","findIndex","pileCard","sourcePileArray","splice","concat","setLastCardDraggable","Game","isLastCard","cardIndex","pileIndex","shuffledCards","lodash","shuffle","WinningPiles","openCards","rendPileCards","initializeOpenCards","isWon","cardCount","generatePile","unshift","isDropableFromOpenCards","isDropableFromPile","isDropable","getGameDetails","fromPile","toPile","isDropableFromOpenCard","winningState","Solitaire","props","possibleConstructorReturn","getPrototypeOf","call","allowDrop","ev","preventDefault","drag","dataTransfer","setData","target","id","updateOpenCards","setState","game","cardColor","black","red","BACK","state","rendCards","bind","assertThisInitialized","drop","dropOnPile","rendOpenCards","rendWinningDiv","dropOnEmptyPile","event","getData","split","parentElement","updateGame","data","isDropableOnPileFromOpenCard","document","getElementById","innerHTML","isDropableOnPileFromPile","cardsDiv","createPile","react_default","a","createElement","className","elements","join","element","Card","text","OpenCard","class","onDragStart","onDrop","onDragOver","style","_this3","winningDeck","_winningState$suit","ReservedDeck","console","log","src","onClick","React","Component","ReactDOM","render","src_Solitaire"],"mappings":"wOA2TeA,SA3TD,CACZ,CACEC,KAAM,QACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,KACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,KACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,KACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,KACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,IACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,KACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,KACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,KACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,OAAQ,KACRC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,KACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,KACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,KACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,OAAQ,KACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,IACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,KACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,KACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,KACRC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,OAAQ,KACRC,MAAO,MACPC,QAAS,kCCzQEC,aA7Cb,SAAAA,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAiCdG,aAAe,SAAAC,GAAI,OAAKA,EAAKC,WAAY,GAjC3BL,KAwCdM,gBAAkB,kBAAMP,EAAKQ,OAxCfP,KAyCdQ,QAAU,SAAAC,GAAU,OAAkB,GAAdA,GAzCVT,KA0CdU,YAAc,SAAAN,GAAI,MAAmB,KAAfA,EAAKT,QAAiBI,EAAKY,OAAOP,EAAKV,OAASU,EAAKR,OAzCzE,IAAIQ,EAAO,CAAEV,KAAM,GAAIC,OAAQ,GAAIE,QAAS,GAAID,MAAO,IACvDI,KAAKO,MAAQ,CAAEK,MAAO,CAACR,GAAOS,MAAO,CAACT,GAAOU,KAAM,CAACV,GAAOW,QAAS,CAACX,IACrEJ,KAAKW,OAAS,CAAEC,MAAO,QAASC,MAAO,MAAOC,KAAM,QAASC,QAAS,2DAGhE,IAAAC,EAAAhB,KACFiB,EAAS,EAIb,OAHAhB,OAAOiB,KAAKlB,KAAKO,OAAOY,QAAQ,SAAAC,GAC9BH,GAAUD,EAAKT,MAAMa,GAAMH,SAEf,IAAVA,qCAIKb,GACT,IAAIK,EAAaT,KAAKO,MAAMH,EAAKV,MAAMuB,OACvC,OAAIjB,KAAKQ,QAAQC,KACXT,KAAKU,YAAYN,KACnBJ,KAAKG,aAAaC,GAClBJ,KAAKO,MAAMH,EAAKV,MAAM2B,KAAKjB,IACpB,KAIPJ,KAAKsB,eAAelB,KACtBJ,KAAKG,aAAaC,GAClBJ,KAAKO,MAAMH,EAAKV,MAAM2B,KAAKjB,IACpB,0CAOIA,GACb,IAAIK,EAAaT,KAAKO,MAAMH,EAAKV,MAAMuB,OAEvC,OADejB,KAAKO,MAAMH,EAAKV,MAAMe,EAAa,GACjCd,OAAS,GAAKS,EAAKT,QAAUK,KAAKW,OAAOP,EAAKV,OAASU,EAAKR,eCgClE2B,aAtEb,SAAAA,IAAc,IAAAxB,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAuB,GAAAvB,KAIdwB,QAAU,SAAAC,GAAI,OAAI1B,EAAK2B,MAAML,KAAKI,IAJpBzB,KAKd2B,SAAW,kBAAM5B,EAAK2B,OALR1B,KAgBdG,aAAe,SAACyB,EAAYC,GACtB9B,EAAK2B,MAAME,GAAYC,EAAa,KACtC9B,EAAK2B,MAAME,GAAYC,EAAa,GAAGxB,WAAY,IAlBzCL,KAqBd8B,WAAa,SAAAF,GAAU,OAAI7B,EAAK2B,MAAME,GAAYG,OArBpC/B,KAsBdgC,cAAgB,SAAAC,GAAK,OAAIlC,EAAK2B,MAAMO,GAAOhB,QAtB7BjB,KAuBdkC,YAAc,SAAAD,GAAK,OAAIlC,EAAK2B,MAAMO,GAAOlC,EAAKiC,cAAcC,GAAS,IAvBvDjC,KAwBdmC,OAAS,SAAA/B,GAAI,OAAoB,KAAfA,EAAKT,QAvBrBK,KAAK0B,MAAQ,gEAKEE,GACf,IAAIH,EAAOzB,KAAK0B,MAAME,GAEtB,MAAO,CAAEX,OADIQ,EAAKR,OACDQ,qDAGEW,EAAUhC,GAC7B,OAAQgC,EAASzC,OAAS,GAAKS,EAAKT,QAAUyC,EAASxC,OAASQ,EAAKR,iDAapDQ,EAAMiC,EAAYC,GAAiB,IAAAC,EAC7BvC,KAAKwC,iBAAiBF,GAAvCrB,EAD8CsB,EAC9CtB,OAAQQ,EADsCc,EACtCd,KACd,GAAc,GAAVR,GAAejB,KAAKmC,OAAO/B,GAC7BJ,KAAKyC,YAAYH,EAAiBD,EAAYjC,OADhD,CAIA,IAAIgC,EAAWX,EAAKR,EAAS,GACzBjB,KAAK0C,qBAAqBN,EAAUhC,IACtCJ,KAAKyC,YAAYH,EAAiBD,EAAYjC,iDAG7BiC,GACfrC,KAAK0B,MAAMW,GAAYpB,SACzBjB,KAAK0B,MAAMW,GAAYrC,KAAK0B,MAAMW,GAAYpB,OAAS,GAAGZ,WAAY,kDAGnDD,EAAMwB,GAAY,IAAAe,EAChB3C,KAAKwC,iBAAiBZ,GAAvCX,EADiC0B,EACjC1B,OAAQQ,EADyBkB,EACzBlB,KACd,GAAc,GAAVR,GAAejB,KAAKmC,OAAO/B,GAG7B,OAFAA,EAAKC,WAAY,EACjBL,KAAK0B,MAAME,GAAYP,KAAKjB,IACrB,EAET,IAAIgC,EAAWX,EAAKR,EAAS,GAC7B,QAAIjB,KAAK0C,qBAAqBN,EAAUhC,KACtCA,EAAKC,WAAY,EACjBL,KAAK0B,MAAME,GAAYP,KAAKjB,IACrB,uCAKCkC,EAAiBD,EAAYjC,GAAM,IAAAY,EAAAhB,KAC7CI,EAAKC,WAAY,EACjB,IAAI4B,EAAQjC,KAAK0B,MAAMW,GAAYO,UAAU,SAAAC,GAAQ,OAAIA,EAAShD,SAAWO,EAAKP,UAC9EiD,EAAkB9C,KAAK0B,MAAMW,GAAYU,OAAOd,GACpDa,EAAgB3B,QAAQ,SAAAf,GACtBY,EAAKU,MAAMY,GAAiBjB,KAAKjB,KAEnCJ,KAAK0B,MAAMY,GAAiBU,OAAOF,GACnC9C,KAAKiD,qBAAqBZ,YCsCfa,aAnGb,SAAAA,IAAc,IAAAnD,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAkD,GAAAlD,KA+Fd2B,SAAW,kBAAM5B,EAAK2B,MAAMC,YA/Fd3B,KAgGdmD,WAAa,SAACC,EAAWC,GAAZ,OAA0BD,GAAaC,GA/FlDrD,KAAKsD,cAAgBC,IAAOC,QAAQ/D,GACpCO,KAAKF,aAAe,IAAI2D,EACxBzD,KAAK0B,MAAQ,IAAIH,EACjBvB,KAAK0D,UAAY,GACjB1D,KAAK2D,gBACL3D,KAAK4D,0EAIL,OAAO5D,KAAKF,aAAa+D,gDAKzB,IADA,IAAIC,EAAY,EACPT,EAAY,EAAGA,EAAY,EAAGA,IAAa,CAClD,IAAI5B,EAAO,GACXqC,EAAY9D,KAAK+D,aAAaV,EAAWS,EAAWrC,GACpDzB,KAAK0B,MAAMF,QAAQC,GAErB,OAAOzB,KAAK0B,MAAMC,gDAGP0B,EAAWS,EAAWrC,GACjC,IAAK,IAAI2B,EAAY,EAAGA,GAAaC,EAAWD,IAAa,CAC3D,IAAIhD,EAAOJ,KAAKsD,cAAcQ,GAC1B9D,KAAKmD,WAAWC,EAAWC,KAAYjD,EAAKC,WAAY,GAC5DoB,EAAKJ,KAAKjB,GACV0D,IAEF,OAAOA,gDAIP,IAAK,IAAI7B,EAAQ,GAAIA,EAAQ,GAAIA,IAC/BjC,KAAK0D,UAAUrC,KAAKrB,KAAKsD,cAAcrB,IAEzC,OAAOjC,KAAK0D,oDAOZ,OAHA1D,KAAK0D,UAAUM,QAAQhE,KAAK0D,UAAU3B,OACvB/B,KAAK0D,UAAU1D,KAAK0D,UAAUzC,OAAS,GAC7CZ,WAAY,EACdL,KAAK0D,6CAGHjC,GACT,MAAY,QAARA,EAAuBzB,KAAKiE,0BACzBjE,KAAKkE,mBAAmBzC,8CAGdG,GACjB,IAAIC,EAAa7B,KAAK0B,MAAMM,cAAcJ,GACtCxB,EAAOJ,KAAK0B,MAAMQ,YAAYN,GAMlC,OALiB5B,KAAKF,aAAaqE,WAAW/D,KAE5CJ,KAAK0B,MAAMI,WAAWF,GACtB5B,KAAK0B,MAAMvB,aAAayB,EAAYC,IAE/B7B,KAAKoE,mEAIZ,IAAIhE,EAAOJ,KAAK0D,UAAU1D,KAAK0D,UAAUzC,OAAS,GAGlD,OAFiBjB,KAAKF,aAAaqE,WAAW/D,IAC9BJ,KAAK0D,UAAU3B,MACxB/B,KAAKoE,kEAGWhE,EAAMiE,EAAUC,GAEvC,OADAtE,KAAK0B,MAAMwC,mBAAmB9D,EAAMiE,EAAUC,GACvCtE,KAAKoE,sEAGehE,EAAMwB,GAIjC,OAHI5B,KAAK0B,MAAM6C,uBAAuBnE,EAAMwB,IAC1C5B,KAAK0D,UAAU3B,MAEV/B,KAAKoE,sDAGD1E,GACX,IAAIuB,EAASjB,KAAKP,MAAMC,GAAMuB,OAC9B,OAAOjB,KAAKP,MAAMC,GAAMuB,EAAS,4CAQjC,MAAO,CAAES,MAJG1B,KAAK0B,MAAMC,WAIP+B,UAHA1D,KAAK0D,UAGMc,aAFRxE,KAAKF,aAAaQ,kBAEIuD,MAD7B7D,KAAK6D,kBC5FfY,cACJ,SAAAA,EAAYC,GAAO,IAAA3E,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAyE,IACjB1E,EAAAE,OAAA0E,EAAA,EAAA1E,CAAAD,KAAAC,OAAA2E,EAAA,EAAA3E,CAAAwE,GAAAI,KAAA7E,KAAM0E,KAeRI,UAAY,SAAAC,GAAE,OAAIA,EAAGC,kBAhBFjF,EAiBnBkF,KAAO,SAAAF,GAAE,OAAIA,EAAGG,aAAaC,QAAQ,OAAQJ,EAAGK,OAAOC,KAjBpCtF,EAkBnBuF,gBAAkB,kBAAMvF,EAAKwF,SAAS,CAAE7B,UAAW3D,EAAKyF,KAAKF,qBAhB3DvF,EAAK0F,UAAY,CAAEC,MAAO,QAASC,IAAK,OACxC5F,EAAK6F,KAAO,CAAC,gBACb7F,EAAKyF,KAAO,IAAItC,EAChBnD,EAAK8F,MAAQ9F,EAAKyF,KAAKpB,iBAEvBrE,EAAK+F,UAAY/F,EAAK+F,UAAUC,KAAf9F,OAAA+F,EAAA,EAAA/F,QAAA+F,EAAA,EAAA/F,CAAAF,KACjBA,EAAKkG,KAAOlG,EAAKkG,KAAKF,KAAV9F,OAAA+F,EAAA,EAAA/F,QAAA+F,EAAA,EAAA/F,CAAAF,KACZA,EAAKmG,WAAanG,EAAKmG,WAAWH,KAAhB9F,OAAA+F,EAAA,EAAA/F,QAAA+F,EAAA,EAAA/F,CAAAF,KAClBA,EAAKuF,gBAAkBvF,EAAKuF,gBAAgBS,KAArB9F,OAAA+F,EAAA,EAAA/F,QAAA+F,EAAA,EAAA/F,CAAAF,KACvBA,EAAKoG,cAAgBpG,EAAKoG,cAAcJ,KAAnB9F,OAAA+F,EAAA,EAAA/F,QAAA+F,EAAA,EAAA/F,CAAAF,KACrBA,EAAKqG,eAAiBrG,EAAKqG,eAAeL,KAApB9F,OAAA+F,EAAA,EAAA/F,QAAA+F,EAAA,EAAA/F,CAAAF,KACtBA,EAAKsG,gBAAkBtG,EAAKsG,gBAAgBN,KAArB9F,OAAA+F,EAAA,EAAA/F,QAAA+F,EAAA,EAAA/F,CAAAF,KAbNA,oEAoBduG,GACH,IACI1E,EADS0E,EAAMpB,aAAaqB,QAAQ,QAClBC,MAAM,KAAK,GACjCxG,KAAKuF,SAASvF,KAAKwF,KAAKrB,WAAWvC,uCAG1B0E,GACT,IAAIhE,EAAkBgE,EAAMlB,OAAOqB,cAAcpB,GAAGmB,MAAM,KAAK,GAC/DxG,KAAK0G,WAAWJ,EAAOhE,2CAGTgE,GACd,IAAIhE,EAAkBgE,EAAMlB,OAAOC,GAAGmB,MAAM,KAAK,GACjDxG,KAAK0G,WAAWJ,EAAOhE,sCAGdgE,EAAOhE,GAChB,IAGIkD,EAHEmB,EAAOL,EAAMpB,aAAaqB,QAAQ,QACpClB,EAAKsB,EAAKH,MAAM,KAChBnE,EAAagD,EAAG,GAEpB,GAAkB,QAAdhD,EAAsB,CACxB,IAAIjC,EAAOJ,KAAK6F,MAAMnC,UAAU1D,KAAK6F,MAAMnC,UAAUzC,OAAS,GAE9D,OADAuE,EAAOxF,KAAKwF,KAAKoB,6BAA6BxG,EAAMkC,GAC7CtC,KAAKuF,SAASC,GAEvB,IAAI3F,EAAUgH,SAASC,eAAeH,GAAMI,UACxC3G,EAAO,CAAER,MAAOyF,EAAG,GAAI1F,OAAQ0F,EAAG,GAAI3F,KAAM2F,EAAG,GAAIxF,WACvD2F,EAAOxF,KAAKwF,KAAKwB,yBAAyB5G,EAAMiC,EAAYC,GAC5DtC,KAAKuF,SAASC,uCAKd,IADA,IAAMyB,EAAW,GACRxF,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CACnC,IACII,EAAa7B,KAAK6F,MAAMnE,MAAMD,GAAMR,OACxCjB,KAAKkH,WAAWrF,EAAYJ,EAFX,GAE2BwF,GAE9C,OAAOE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASL,sCAGtBpF,EAAYJ,EAAM8F,EAAUN,GAAU,IAAAjG,EAAAhB,KAC/CA,KAAK6F,MAAMnE,MAAMD,GAAMN,QAAQ,SAAAf,GAC7B,IAAIiF,EAAK,CAACjF,EAAKR,MAAOQ,EAAKT,OAAQS,EAAKV,KAAM+B,GAAM+F,KAAK,KACrDC,EAAUN,EAAAC,EAAAC,cAACK,EAAD,CAAMrC,GAAIA,EAAIiC,UAAU,QAAQK,KAAM3G,EAAK4E,OACrDxF,EAAKC,YACPoH,EACEN,EAAAC,EAAAC,cAACO,EAAD,CACEvC,GAAIA,EACJwC,MAAO7G,EAAKyE,UAAUrF,EAAKR,OAC3BkI,YAAa9G,EAAKiE,KAAKc,KAAK/E,GAC5B+G,OAAQ/G,EAAKkF,WACb8B,WAAYhH,EAAK8D,UAAUiB,KAAK/E,GAChC2G,KAAMvH,EAAKP,WAGjB0H,EAASlG,KAAKoG,KAEZ5F,EACFoF,EAAS5F,KAAK8F,EAAAC,EAAAC,cAACK,EAAD,CAAMrC,GAAI,QAAU5D,EAAM6F,UAAU,OAAOK,KAAMJ,KAGjEN,EAAS5F,KACP8F,EAAAC,EAAAC,cAAA,OACEhC,GAAI,QAAU5D,EACd6F,UAAU,OACVS,OAAQ/H,KAAKqG,gBACb2B,WAAYhI,KAAK8E,UAAUiB,KAAK/F,iDAMpC,IAAI0D,EAAY1D,KAAK6F,MAAMnC,UAC3B,IAAKA,EAAUzC,OAAQ,OAAOkG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQG,GACrD,IAAIrH,EAAOsD,EAAUA,EAAUzC,OAAS,GACpCoE,EAAK,CAACjF,EAAKR,MAAOQ,EAAKT,OAAQS,EAAKV,KAAM,QAAQ8H,KAAK,KACvD5H,EAAQI,KAAKyF,UAAUrF,EAAKR,OAC5B6H,EACFN,EAAAC,EAAAC,cAAA,OAAKhC,GAAIA,EAAI4C,MAAO,CAAErI,SAASS,UAAU,OAAOyH,YAAa9H,KAAKiF,KAAKc,KAAK/F,OACzEI,EAAKP,SAGV,OAAOsH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQG,4CAGf,IAAAS,EAAAlI,KACXwE,EAAexE,KAAK6F,MAAMrB,aAC1B2D,EAAc,GAclB,OAbAlI,OAAOiB,KAAKsD,GAAcrD,QAAQ,SAAAC,GAChC,IAAIH,EAASuD,EAAapD,GAAMH,OADQmH,EAEf5D,EAAapD,GAAMH,EAAS,GAA/CpB,EAFkCuI,EAElCvI,QAASD,EAFyBwI,EAEzBxI,MACfuI,EAAY9G,KACV8F,EAAAC,EAAAC,cAACgB,EAAD,CACER,MAAM,eACNxC,GAAIjE,EACJ2G,OAAQG,EAAKjC,KACb+B,WAAYE,EAAKpD,UAAUiB,KAAKmC,GAChCP,KAAMR,EAAAC,EAAAC,cAAA,OAAKY,MAAO,CAAErI,UAAUC,QAI7BsH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBa,oCAKzC,OADAG,QAAQC,IAAIvI,KAAK6F,MAAMhC,OACnB7D,KAAK6F,MAAMhC,MAEXsD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKmB,IAAI,yEAKbrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAACK,EAAD,CAAMJ,UAAU,OAAOjC,GAAG,OAAOoD,QAASzI,KAAKsF,gBAAiBqC,KAAM3H,KAAK4F,OAC3EuB,EAAAC,EAAAC,cAAArH,KAAMmG,cAAN,OAEFgB,EAAAC,EAAAC,cAAArH,KAAMoG,eAAN,OAEDpG,KAAK8F,oBAjJU4C,IAAMC,WAuJ9B,SAASjB,EAAKhD,GACZ,OACEyC,EAAAC,EAAAC,cAAA,OAAKhC,GAAIX,EAAMW,GAAIiC,UAAW5C,EAAM4C,UAAWmB,QAAS/D,EAAM+D,SAC3D/D,EAAMiD,MAKb,SAASC,EAASlD,GAChB,OACEyC,EAAAC,EAAAC,cAAA,OACEhC,GAAIX,EAAMW,GACViC,UAAW5C,EAAMmD,MACjBxH,WAAS,EACTyH,YAAapD,EAAMoD,YACnBC,OAAQrD,EAAMqD,OACdC,WAAYtD,EAAMsD,YAEjBtD,EAAMiD,MAKb,SAASU,EAAa3D,GACpB,OACEyC,EAAAC,EAAAC,cAAA,OACEC,UAAW5C,EAAMmD,MACjBxC,GAAIX,EAAMtE,KACV2H,OAAQrD,EAAMqD,OACdC,WAAYtD,EAAMsD,YAEjBtD,EAAMiD,MAKbiB,IAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAD,MAAejC,SAASC,eAAe","file":"static/js/main.29de6353.chunk.js","sourcesContent":["const cards = [\n  {\n    type: \"spade\",\n    number: \"1\",\n    color: \"black\",\n    unicode: \"\\u{1F0A1}\"\n  },\n  {\n    type: \"spade\",\n    number: \"2\",\n    color: \"black\",\n    unicode: \"\\u{1F0A2}\"\n  },\n  {\n    type: \"spade\",\n    number: \"3\",\n    color: \"black\",\n    unicode: \"\\u{1F0A3}\"\n  },\n  {\n    type: \"spade\",\n    number: \"4\",\n    color: \"black\",\n    unicode: \"\\u{1F0A4}\"\n  },\n  {\n    type: \"spade\",\n    number: \"5\",\n    color: \"black\",\n    unicode: \"\\u{1F0A5}\"\n  },\n  {\n    type: \"spade\",\n    number: \"6\",\n    color: \"black\",\n    unicode: \"\\u{1F0A6}\"\n  },\n  {\n    type: \"spade\",\n    number: \"7\",\n    color: \"black\",\n    unicode: \"\\u{1F0A7}\"\n  },\n  {\n    type: \"spade\",\n    number: \"8\",\n    color: \"black\",\n    unicode: \"\\u{1F0A8}\"\n  },\n  {\n    type: \"spade\",\n    number: \"9\",\n    color: \"black\",\n    unicode: \"\\u{1F0A9}\"\n  },\n  {\n    type: \"spade\",\n    number: \"10\",\n    color: \"black\",\n    unicode: \"\\u{1F0AA}\"\n  },\n  {\n    type: \"spade\",\n    number: \"11\",\n    color: \"black\",\n    unicode: \"\\u{1F0AB}\"\n  },\n  {\n    type: \"spade\",\n    number: \"12\",\n    color: \"black\",\n    unicode: \"\\u{1F0AD}\"\n  },\n  {\n    type: \"spade\",\n    number: \"13\",\n    color: \"black\",\n    unicode: \"\\u{1F0AE}\"\n  },\n  {\n    type: \"club\",\n    number: \"1\",\n    color: \"black\",\n    unicode: \"\\u{1F0D1}\"\n  },\n  {\n    type: \"club\",\n    number: \"2\",\n    color: \"black\",\n    unicode: \"\\u{1F0D2}\"\n  },\n  {\n    type: \"club\",\n    number: \"3\",\n    color: \"black\",\n    unicode: \"\\u{1F0D3}\"\n  },\n  {\n    type: \"club\",\n    number: \"4\",\n    color: \"black\",\n    unicode: \"\\u{1F0D4}\"\n  },\n  {\n    type: \"club\",\n    number: \"5\",\n    color: \"black\",\n    unicode: \"\\u{1F0D5}\"\n  },\n  {\n    type: \"club\",\n    number: \"6\",\n    color: \"black\",\n    unicode: \"\\u{1F0D6}\"\n  },\n  {\n    type: \"club\",\n    number: \"7\",\n    color: \"black\",\n    unicode: \"\\u{1F0D7}\"\n  },\n  {\n    type: \"club\",\n    number: \"8\",\n    color: \"black\",\n    unicode: \"\\u{1F0D8}\"\n  },\n  {\n    type: \"club\",\n    number: \"9\",\n    color: \"black\",\n    unicode: \"\\u{1F0D9}\"\n  },\n  {\n    type: \"club\",\n    number: \"10\",\n    color: \"black\",\n    unicode: \"\\u{1F0DA}\"\n  },\n  {\n    type: \"club\",\n    number: \"11\",\n    color: \"black\",\n    unicode: \"\\u{1F0DB}\"\n  },\n  {\n    type: \"club\",\n    number: \"12\",\n    color: \"black\",\n    unicode: \"\\u{1F0DD}\"\n  },\n  {\n    type: \"club\",\n    number: \"13\",\n    color: \"black\",\n    unicode: \"\\u{1F0DE}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"1\",\n    color: \"red\",\n    unicode: \"\\u{1F0C1}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"2\",\n    color: \"red\",\n    unicode: \"\\u{1F0C2}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"3\",\n    color: \"red\",\n    unicode: \"\\u{1F0C3}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"4\",\n    color: \"red\",\n    unicode: \"\\u{1F0C4}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"5\",\n    color: \"red\",\n    unicode: \"\\u{1F0C5}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"6\",\n    color: \"red\",\n    unicode: \"\\u{1F0C6}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"7\",\n    color: \"red\",\n    unicode: \"\\u{1F0C7}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"8\",\n    color: \"red\",\n    unicode: \"\\u{1F0C8}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"9\",\n    color: \"red\",\n    unicode: \"\\u{1F0C9}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"10\",\n    color: \"red\",\n    unicode: \"\\u{1F0CA}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"11\",\n    color: \"red\",\n    unicode: \"\\u{1F0CB}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"12\",\n    color: \"red\",\n    unicode: \"\\u{1F0CD}\"\n  },\n  {\n    type: \"diamond\",\n    number: \"13\",\n    color: \"red\",\n    unicode: \"\\u{1F0CE}\"\n  },\n  {\n    type: \"heart\",\n    number: \"1\",\n    color: \"red\",\n    unicode: \"\\u{1F0B1}\"\n  },\n  {\n    type: \"heart\",\n    number: \"2\",\n    color: \"red\",\n    unicode: \"\\u{1F0B2}\"\n  },\n  {\n    type: \"heart\",\n    number: \"3\",\n    color: \"red\",\n    unicode: \"\\u{1F0B3}\"\n  },\n  {\n    type: \"heart\",\n    number: \"4\",\n    color: \"red\",\n    unicode: \"\\u{1F0B4}\"\n  },\n  {\n    type: \"heart\",\n    number: \"5\",\n    color: \"red\",\n    unicode: \"\\u{1F0B5}\"\n  },\n  {\n    type: \"heart\",\n    number: \"6\",\n    color: \"red\",\n    unicode: \"\\u{1F0B6}\"\n  },\n  {\n    type: \"heart\",\n    number: \"7\",\n    color: \"red\",\n    unicode: \"\\u{1F0B7}\"\n  },\n  {\n    type: \"heart\",\n    number: \"8\",\n    color: \"red\",\n    unicode: \"\\u{1F0B8}\"\n  },\n  {\n    type: \"heart\",\n    number: \"9\",\n    color: \"red\",\n    unicode: \"\\u{1F0B9}\"\n  },\n  {\n    type: \"heart\",\n    number: \"10\",\n    color: \"red\",\n    unicode: \"\\u{1F0BA}\"\n  },\n  {\n    type: \"heart\",\n    number: \"11\",\n    color: \"red\",\n    unicode: \"\\u{1F0BB}\"\n  },\n  {\n    type: \"heart\",\n    number: \"12\",\n    color: \"red\",\n    unicode: \"\\u{1F0BD}\"\n  },\n  {\n    type: \"heart\",\n    number: \"13\",\n    color: \"red\",\n    unicode: \"\\u{1F0BE}\"\n  }\n];\n\nexport default cards;\n","class winningPiles {\n  constructor() {\n    let card = { type: \"\", number: \"\", unicode: \"\", color: \"\" };\n    this.decks = { spade: [card], heart: [card], club: [card], diamond: [card] };\n    this.colors = { spade: \"black\", heart: \"red\", club: \"black\", diamond: \"red\" };\n  }\n\n  isWon() {\n    let length = 0;\n    Object.keys(this.decks).forEach(suit => {\n      length += this.decks[suit].length;\n    });\n    if (length == 56) return true;\n    return false;\n  }\n\n  isDropable(card) {\n    let cardLength = this.decks[card.type].length;\n    if (this.isEmpty(cardLength)) {\n      if (this.isFirstCard(card)) {\n        this.setDraggable(card);\n        this.decks[card.type].push(card);\n        return true;\n      }\n      return false;\n    }\n    if (this.isThisDropable(card)) {\n      this.setDraggable(card);\n      this.decks[card.type].push(card);\n      return true;\n    }\n    return false;\n  }\n\n  setDraggable = card => (card.draggable = true);\n\n  isThisDropable(card) {\n    let cardLength = this.decks[card.type].length;\n    let lastCard = this.decks[card.type][cardLength - 1];\n    return +lastCard.number + 1 == card.number && this.colors[card.type] == card.color;\n  }\n  getWinningPiles = () => this.decks;\n  isEmpty = cardLength => cardLength == 1;\n  isFirstCard = card => card.number == \"1\" && this.colors[card.type] == card.color;\n}\n\nexport default winningPiles;\n","class Piles {\n  constructor() {\n    this.piles = [];\n  }\n\n  addPile = pile => this.piles.push(pile);\n  getPiles = () => this.piles;\n  getPileAndLength(pileNumber) {\n    let pile = this.piles[pileNumber];\n    let length = pile.length;\n    return { length, pile };\n  }\n\n  isThisDropableOnPile(lastCard, card) {\n    return +lastCard.number - 1 == card.number && lastCard.color != card.color;\n  }\n\n  setDraggable = (pileNumber, pileLength) => {\n    if (this.piles[pileNumber][pileLength - 2])\n      this.piles[pileNumber][pileLength - 2].draggable = true;\n  };\n\n  removeCard = pileNumber => this.piles[pileNumber].pop();\n  getPileLength = index => this.piles[index].length;\n  getLastCard = index => this.piles[index][this.getPileLength(index) - 1];\n  isKing = card => +card.number == 13;\n\n  isDropableFromPile(card, sourcePile, destinationPile) {\n    let { length, pile } = this.getPileAndLength(destinationPile);\n    if (length == 0 && this.isKing(card)) {\n      this.updatePiles(destinationPile, sourcePile, card);\n      return;\n    }\n    let lastCard = pile[length - 1];\n    if (this.isThisDropableOnPile(lastCard, card))\n      this.updatePiles(destinationPile, sourcePile, card);\n  }\n\n  setLastCardDraggable(sourcePile) {\n    if (this.piles[sourcePile].length)\n      this.piles[sourcePile][this.piles[sourcePile].length - 1].draggable = true;\n  }\n\n  isDropableFromOpenCard(card, pileNumber) {\n    let { length, pile } = this.getPileAndLength(pileNumber);\n    if (length == 0 && this.isKing(card)) {\n      card.draggable = true;\n      this.piles[pileNumber].push(card);\n      return true;\n    }\n    let lastCard = pile[length - 1];\n    if (this.isThisDropableOnPile(lastCard, card)) {\n      card.draggable = true;\n      this.piles[pileNumber].push(card);\n      return true;\n    }\n    return false;\n  }\n\n  updatePiles(destinationPile, sourcePile, card) {\n    card.draggable = true;\n    let index = this.piles[sourcePile].findIndex(pileCard => pileCard.unicode == card.unicode);\n    let sourcePileArray = this.piles[sourcePile].splice(index);\n    sourcePileArray.forEach(card => {\n      this.piles[destinationPile].push(card);\n    });\n    this.piles[destinationPile].concat(sourcePileArray);\n    this.setLastCardDraggable(sourcePile);\n  }\n}\n\nexport default Piles;\n","import cards from \"../data/cards.js\";\nimport lodash from \"lodash\";\nimport WinningPiles from \"./winningPiles\";\nimport Piles from \"./piles\";\n\nclass Game {\n  constructor() {\n    this.shuffledCards = lodash.shuffle(cards);\n    this.winningPiles = new WinningPiles();\n    this.piles = new Piles();\n    this.openCards = [];\n    this.rendPileCards();\n    this.initializeOpenCards();\n  }\n\n  isWon() {\n    return this.winningPiles.isWon();\n  }\n\n  rendPileCards() {\n    let cardCount = 0;\n    for (let pileIndex = 0; pileIndex < 7; pileIndex++) {\n      let pile = [];\n      cardCount = this.generatePile(pileIndex, cardCount, pile);\n      this.piles.addPile(pile);\n    }\n    return this.piles.getPiles();\n  }\n\n  generatePile(pileIndex, cardCount, pile) {\n    for (let cardIndex = 0; cardIndex <= pileIndex; cardIndex++) {\n      let card = this.shuffledCards[cardCount];\n      if (this.isLastCard(cardIndex, pileIndex)) card.draggable = true;\n      pile.push(card);\n      cardCount++;\n    }\n    return cardCount;\n  }\n\n  initializeOpenCards() {\n    for (let index = 28; index < 52; index++) {\n      this.openCards.push(this.shuffledCards[index]);\n    }\n    return this.openCards;\n  }\n\n  updateOpenCards() {\n    this.openCards.unshift(this.openCards.pop());\n    let lastCard = this.openCards[this.openCards.length - 1];\n    lastCard.draggable = true;\n    return this.openCards;\n  }\n\n  isDropable(pile) {\n    if (pile == \"back\") return this.isDropableFromOpenCards();\n    return this.isDropableFromPile(pile);\n  }\n\n  isDropableFromPile(pileNumber) {\n    let pileLength = this.piles.getPileLength(pileNumber);\n    let card = this.piles.getLastCard(pileNumber);\n    let isDropable = this.winningPiles.isDropable(card);\n    if (isDropable) {\n      this.piles.removeCard(pileNumber);\n      this.piles.setDraggable(pileNumber, pileLength);\n    }\n    return this.getGameDetails();\n  }\n\n  isDropableFromOpenCards() {\n    let card = this.openCards[this.openCards.length - 1];\n    let isDropable = this.winningPiles.isDropable(card);\n    if (isDropable) this.openCards.pop();\n    return this.getGameDetails();\n  }\n\n  isDropableOnPileFromPile(card, fromPile, toPile) {\n    this.piles.isDropableFromPile(card, fromPile, toPile);\n    return this.getGameDetails();\n  }\n\n  isDropableOnPileFromOpenCard(card, pileNumber) {\n    if (this.piles.isDropableFromOpenCard(card, pileNumber)) {\n      this.openCards.pop();\n    }\n    return this.getGameDetails();\n  }\n\n  rendLastCard(type) {\n    let length = this.cards[type].length;\n    return this.cards[type][length - 1];\n  }\n\n  getGameDetails() {\n    let piles = this.piles.getPiles();\n    let openCards = this.openCards;\n    let winningState = this.winningPiles.getWinningPiles();\n    let isWon = this.isWon();\n    return { piles, openCards, winningState, isWon };\n  }\n\n  getPiles = () => this.piles.getPiles();\n  isLastCard = (cardIndex, pileIndex) => cardIndex == pileIndex;\n}\n\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./model/game\";\n\nclass Solitaire extends React.Component {\n  constructor(props) {\n    super(props);\n    this.cardColor = { black: \"black\", red: \"red\" };\n    this.BACK = [\"\\uD83C\\uDCA0\"];\n    this.game = new Game();\n    this.state = this.game.getGameDetails();\n\n    this.rendCards = this.rendCards.bind(this);\n    this.drop = this.drop.bind(this);\n    this.dropOnPile = this.dropOnPile.bind(this);\n    this.updateOpenCards = this.updateOpenCards.bind(this);\n    this.rendOpenCards = this.rendOpenCards.bind(this);\n    this.rendWinningDiv = this.rendWinningDiv.bind(this);\n    this.dropOnEmptyPile = this.dropOnEmptyPile.bind(this);\n  }\n\n  allowDrop = ev => ev.preventDefault();\n  drag = ev => ev.dataTransfer.setData(\"text\", ev.target.id);\n  updateOpenCards = () => this.setState({ openCards: this.game.updateOpenCards() });\n\n  drop(event) {\n    const data = event.dataTransfer.getData(\"text\");\n    let pileNumber = data.split(\"_\")[3];\n    this.setState(this.game.isDropable(pileNumber));\n  }\n\n  dropOnPile(event) {\n    let destinationPile = event.target.parentElement.id.split(\"_\")[1];\n    this.updateGame(event, destinationPile);\n  }\n\n  dropOnEmptyPile(event) {\n    let destinationPile = event.target.id.split(\"_\")[1];\n    this.updateGame(event, destinationPile);\n  }\n\n  updateGame(event, destinationPile) {\n    const data = event.dataTransfer.getData(\"text\");\n    let id = data.split(\"_\");\n    let sourcePile = id[3];\n    let game;\n    if (sourcePile == \"back\") {\n      let card = this.state.openCards[this.state.openCards.length - 1];\n      game = this.game.isDropableOnPileFromOpenCard(card, destinationPile);\n      return this.setState(game);\n    }\n    let unicode = document.getElementById(data).innerHTML;\n    let card = { color: id[0], number: id[1], type: id[2], unicode };\n    game = this.game.isDropableOnPileFromPile(card, sourcePile, destinationPile);\n    this.setState(game);\n  }\n\n  rendCards() {\n    const cardsDiv = [];\n    for (let pile = 0; pile < 7; pile++) {\n      const elements = [];\n      let pileLength = this.state.piles[pile].length;\n      this.createPile(pileLength, pile, elements, cardsDiv);\n    }\n    return <div className=\"piles\">{cardsDiv}</div>;\n  }\n\n  createPile(pileLength, pile, elements, cardsDiv) {\n    this.state.piles[pile].forEach(card => {\n      let id = [card.color, card.number, card.type, pile].join(\"_\");\n      let element = <Card id={id} className=\"black\" text={this.BACK} />;\n      if (card.draggable)\n        element = (\n          <OpenCard\n            id={id}\n            class={this.cardColor[card.color]}\n            onDragStart={this.drag.bind(this)}\n            onDrop={this.dropOnPile}\n            onDragOver={this.allowDrop.bind(this)}\n            text={card.unicode}\n          />\n        );\n      elements.push(element);\n    });\n    if (pileLength) {\n      cardsDiv.push(<Card id={\"pile_\" + pile} className=\"pile\" text={elements} />);\n      return;\n    }\n    cardsDiv.push(\n      <div\n        id={\"pile_\" + pile}\n        className=\"pile\"\n        onDrop={this.dropOnEmptyPile}\n        onDragOver={this.allowDrop.bind(this)}\n      />\n    );\n  }\n\n  rendOpenCards() {\n    let openCards = this.state.openCards;\n    if (!openCards.length) return <div className=\"back\">{element}</div>;\n    let card = openCards[openCards.length - 1];\n    let id = [card.color, card.number, card.type, \"back\"].join(\"_\");\n    let color = this.cardColor[card.color];\n    let element = (\n      <div id={id} style={{ color }} draggable=\"true\" onDragStart={this.drag.bind(this)}>\n        {card.unicode}\n      </div>\n    );\n    return <div className=\"back\">{element}</div>;\n  }\n\n  rendWinningDiv() {\n    let winningState = this.state.winningState;\n    let winningDeck = [];\n    Object.keys(winningState).forEach(suit => {\n      let length = winningState[suit].length;\n      let { unicode, color } = winningState[suit][length - 1];\n      winningDeck.push(\n        <ReservedDeck\n          class=\"reservedCard\"\n          id={suit}\n          onDrop={this.drop}\n          onDragOver={this.allowDrop.bind(this)}\n          text={<div style={{ color }}>{unicode}</div>}\n        />\n      );\n    });\n    return <div className=\"reservedSection\">{winningDeck}</div>;\n  }\n\n  render() {\n    console.log(this.state.isWon);\n    if (this.state.isWon) {\n      return (\n        <div>\n          <img src=\"https://cdn2.iconfinder.com/data/icons/kick-off/450/Throphy-512.png\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"solitaire\">\n        <div className=\"upperContainer\">\n          <div className=\"backAndCurrentCard\">\n            <Card className=\"back\" id=\"back\" onClick={this.updateOpenCards} text={this.BACK} />\n            <this.rendOpenCards />\n          </div>\n          <this.rendWinningDiv />\n        </div>\n        {this.rendCards()}\n      </div>\n    );\n  }\n}\n\nfunction Card(props) {\n  return (\n    <div id={props.id} className={props.className} onClick={props.onClick}>\n      {props.text}\n    </div>\n  );\n}\n\nfunction OpenCard(props) {\n  return (\n    <div\n      id={props.id}\n      className={props.class}\n      draggable\n      onDragStart={props.onDragStart}\n      onDrop={props.onDrop}\n      onDragOver={props.onDragOver}\n    >\n      {props.text}\n    </div>\n  );\n}\n\nfunction ReservedDeck(props) {\n  return (\n    <div\n      className={props.class}\n      id={props.card}\n      onDrop={props.onDrop}\n      onDragOver={props.onDragOver}\n    >\n      {props.text}\n    </div>\n  );\n}\n\nReactDOM.render(<Solitaire />, document.getElementById(\"root\"));\n"],"sourceRoot":""}